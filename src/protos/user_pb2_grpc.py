# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import user_pb2 as user__pb2


class UserStub(object):
    """The UserService defines the methods that our service exposes
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SignIn = channel.unary_unary(
                '/user.User/SignIn',
                request_serializer=user__pb2.SignInSignUpRequest.SerializeToString,
                response_deserializer=user__pb2.UserResponse.FromString,
                )
        self.SignUp = channel.unary_unary(
                '/user.User/SignUp',
                request_serializer=user__pb2.SignInSignUpRequest.SerializeToString,
                response_deserializer=user__pb2.UserResponse.FromString,
                )
        self.GetMe = channel.unary_unary(
                '/user.User/GetMe',
                request_serializer=user__pb2.EmptyRequest.SerializeToString,
                response_deserializer=user__pb2.UserDto.FromString,
                )
        self.ResetPassword = channel.unary_unary(
                '/user.User/ResetPassword',
                request_serializer=user__pb2.PasswordRequest.SerializeToString,
                response_deserializer=user__pb2.EmptyResponse.FromString,
                )
        self.ChangeEmail = channel.unary_unary(
                '/user.User/ChangeEmail',
                request_serializer=user__pb2.EmailRequest.SerializeToString,
                response_deserializer=user__pb2.EmptyResponse.FromString,
                )
        self.InviteUser = channel.unary_unary(
                '/user.User/InviteUser',
                request_serializer=user__pb2.InviteUserRequest.SerializeToString,
                response_deserializer=user__pb2.UserDto.FromString,
                )
        self.ActivateUser = channel.unary_unary(
                '/user.User/ActivateUser',
                request_serializer=user__pb2.ActivateUserRequest.SerializeToString,
                response_deserializer=user__pb2.ActivateUserResponse.FromString,
                )
        self.ChangeRights = channel.unary_unary(
                '/user.User/ChangeRights',
                request_serializer=user__pb2.ChangeRightsRequest.SerializeToString,
                response_deserializer=user__pb2.UserDto.FromString,
                )
        self.GetUsers = channel.unary_unary(
                '/user.User/GetUsers',
                request_serializer=user__pb2.EmptyRequest.SerializeToString,
                response_deserializer=user__pb2.GetUsersResponse.FromString,
                )
        self.DeleteUser = channel.unary_unary(
                '/user.User/DeleteUser',
                request_serializer=user__pb2.EmailRequest.SerializeToString,
                response_deserializer=user__pb2.EmptyResponse.FromString,
                )
        self.ChangeLanguage = channel.unary_unary(
                '/user.User/ChangeLanguage',
                request_serializer=user__pb2.ChangeLanguageRequest.SerializeToString,
                response_deserializer=user__pb2.EmptyResponse.FromString,
                )
        self.GetUserLanguage = channel.unary_unary(
                '/user.User/GetUserLanguage',
                request_serializer=user__pb2.UserRequest.SerializeToString,
                response_deserializer=user__pb2.UserLanguageResponse.FromString,
                )
        self.GetHistory = channel.unary_unary(
                '/user.User/GetHistory',
                request_serializer=user__pb2.GetHistoryRequest.SerializeToString,
                response_deserializer=user__pb2.GetHistoryResponse.FromString,
                )
        self.NightMode = channel.unary_unary(
                '/user.User/NightMode',
                request_serializer=user__pb2.NightModeRequest.SerializeToString,
                response_deserializer=user__pb2.EmptyResponse.FromString,
                )


class UserServicer(object):
    """The UserService defines the methods that our service exposes
    """

    def SignIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignUp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeEmail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InviteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActivateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeRights(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeLanguage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserLanguage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NightMode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SignIn': grpc.unary_unary_rpc_method_handler(
                    servicer.SignIn,
                    request_deserializer=user__pb2.SignInSignUpRequest.FromString,
                    response_serializer=user__pb2.UserResponse.SerializeToString,
            ),
            'SignUp': grpc.unary_unary_rpc_method_handler(
                    servicer.SignUp,
                    request_deserializer=user__pb2.SignInSignUpRequest.FromString,
                    response_serializer=user__pb2.UserResponse.SerializeToString,
            ),
            'GetMe': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMe,
                    request_deserializer=user__pb2.EmptyRequest.FromString,
                    response_serializer=user__pb2.UserDto.SerializeToString,
            ),
            'ResetPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetPassword,
                    request_deserializer=user__pb2.PasswordRequest.FromString,
                    response_serializer=user__pb2.EmptyResponse.SerializeToString,
            ),
            'ChangeEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeEmail,
                    request_deserializer=user__pb2.EmailRequest.FromString,
                    response_serializer=user__pb2.EmptyResponse.SerializeToString,
            ),
            'InviteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.InviteUser,
                    request_deserializer=user__pb2.InviteUserRequest.FromString,
                    response_serializer=user__pb2.UserDto.SerializeToString,
            ),
            'ActivateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.ActivateUser,
                    request_deserializer=user__pb2.ActivateUserRequest.FromString,
                    response_serializer=user__pb2.ActivateUserResponse.SerializeToString,
            ),
            'ChangeRights': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeRights,
                    request_deserializer=user__pb2.ChangeRightsRequest.FromString,
                    response_serializer=user__pb2.UserDto.SerializeToString,
            ),
            'GetUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUsers,
                    request_deserializer=user__pb2.EmptyRequest.FromString,
                    response_serializer=user__pb2.GetUsersResponse.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=user__pb2.EmailRequest.FromString,
                    response_serializer=user__pb2.EmptyResponse.SerializeToString,
            ),
            'ChangeLanguage': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeLanguage,
                    request_deserializer=user__pb2.ChangeLanguageRequest.FromString,
                    response_serializer=user__pb2.EmptyResponse.SerializeToString,
            ),
            'GetUserLanguage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserLanguage,
                    request_deserializer=user__pb2.UserRequest.FromString,
                    response_serializer=user__pb2.UserLanguageResponse.SerializeToString,
            ),
            'GetHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHistory,
                    request_deserializer=user__pb2.GetHistoryRequest.FromString,
                    response_serializer=user__pb2.GetHistoryResponse.SerializeToString,
            ),
            'NightMode': grpc.unary_unary_rpc_method_handler(
                    servicer.NightMode,
                    request_deserializer=user__pb2.NightModeRequest.FromString,
                    response_serializer=user__pb2.EmptyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'user.User', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class User(object):
    """The UserService defines the methods that our service exposes
    """

    @staticmethod
    def SignIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/SignIn',
            user__pb2.SignInSignUpRequest.SerializeToString,
            user__pb2.UserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignUp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/SignUp',
            user__pb2.SignInSignUpRequest.SerializeToString,
            user__pb2.UserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/GetMe',
            user__pb2.EmptyRequest.SerializeToString,
            user__pb2.UserDto.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/ResetPassword',
            user__pb2.PasswordRequest.SerializeToString,
            user__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/ChangeEmail',
            user__pb2.EmailRequest.SerializeToString,
            user__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InviteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/InviteUser',
            user__pb2.InviteUserRequest.SerializeToString,
            user__pb2.UserDto.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ActivateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/ActivateUser',
            user__pb2.ActivateUserRequest.SerializeToString,
            user__pb2.ActivateUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeRights(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/ChangeRights',
            user__pb2.ChangeRightsRequest.SerializeToString,
            user__pb2.UserDto.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/GetUsers',
            user__pb2.EmptyRequest.SerializeToString,
            user__pb2.GetUsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/DeleteUser',
            user__pb2.EmailRequest.SerializeToString,
            user__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeLanguage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/ChangeLanguage',
            user__pb2.ChangeLanguageRequest.SerializeToString,
            user__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserLanguage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/GetUserLanguage',
            user__pb2.UserRequest.SerializeToString,
            user__pb2.UserLanguageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/GetHistory',
            user__pb2.GetHistoryRequest.SerializeToString,
            user__pb2.GetHistoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NightMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/NightMode',
            user__pb2.NightModeRequest.SerializeToString,
            user__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
